version: '3.7'

services:
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  frontend:
    build:
      context: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - backend
      - postgres

  backend:
    build:
      context: ./backend
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.docs.rule=PathPrefix(`/docs`)"
      - "traefik.http.services.docs.loadbalancer.server.port=8000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://app:oXROms9Cie4E@ep-plain-leaf-a4b9ragz-pooler.us-east-1.aws.neon.tech:5432/verceldb

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: oXROms9Cie4E
      POSTGRES_DB: verceldb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    labels:
      - "traefik.http.routers.adminer.rule=Host(`db.domain`)"

volumes:
  postgres_data: